name: ci-docusaurus

on:
  push:
    branches-ignore:
      - main
env:
  BRANCH_NAME: ${{ github.ref_name }}
  FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
  FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
  FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
  FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
  MESSAGING_SENDER_ID: ${{ secrets.MESSAGING_SENDER_ID }}
  APP_ID: ${{ secrets.APP_ID }}
permissions:
  pull-requests: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-tests:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out repo
        uses: actions/checkout@v2

      # Node is required for npm
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      # # Install and build Docusaurus website
      # - name: Build Docusaurus website
      #   run: |
      #     npm install
      #     npm run build

      # Install Netlify
      - name: Install Netlify
        run: yarn add netlify-cli@17.10.1 -g

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
          envkey_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}
          envkey_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          envkey_FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
          envkey_MESSAGING_SENDER_ID: ${{ secrets.MESSAGING_SENDER_ID }}

      # Netlify import env
      - name: Netlify import env
        run: |
          netlify link
          netlify env:import .env --replace-existing
        env:
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

      # Create Preview URL for testing
      - name: Build and Create Preview URL
        uses: jsmrcaga/action-netlify-deploy@master
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          deploy_alias: ${{ env.BRANCH_NAME }}

      # # Creates a status check with link to preview
      # - name: Status check
      #   uses: Sibz/github-status-action@v1.1.1
      #   with:
      #     authToken: ${{ secrets.GITHUB_TOKEN }}
      #     context: Netlify preview
      #     state: success
      #     target_url: ${{ env.NETLIFY_PREVIEW_URL }}

      # Comment preview URL on PR
      - name: Comment URL Preview on PR
        uses: actions/github-script@v7
        env:
          NETLIFY_PREVIEW_URL: ${{ env.NETLIFY_PREVIEW_URL }}
        with:
          script: |
            async function comment(){
              const result = await github.rest.repos.listPullRequestsAssociatedWithCommit({
                owner: context.repo.owner,
                repo: context.repo.repo,
                commit_sha: context.sha,
              })

              if(!result || !result.data || !result.data.length) {
                console.log('No PR found for commit ' + context.sha)
                return
              }
              const issueNumber = result.data[0].number
              if(issueNumber){
                await github.rest.issues.createComment({
                  issue_number: issueNumber,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: 'Preview URL: ' + process.env.NETLIFY_PREVIEW_URL
                })
              }else{
                console.log('No PR found for commit ' + context.sha)
              }
            }
            comment()
